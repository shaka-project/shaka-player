name: Deploy Nightly Demo on GitHub Pages

on:
  workflow_dispatch:
    # Allows for manual triggering.
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        shell: bash
        run: npm ci

      - name: Build Shaka Player
        shell: bash
        run: npm run build

      - name: Extract git version
        shell: bash
        run: |
          (
            cd build
            python3 -c 'from shakaBuildHelpers import git_version; print(git_version())'
          ) > demo-version

      - name: Tag the Player version
        shell: bash
        run: |
          DEMO_VERSION="$(cat demo-version)-uncompiled"
          sed \
              -i lib/player.js \
              -e "s/\(shaka.Player.version\) = .*/\1 = '$DEMO_VERSION';/"
          rm demo-version

      - name: Backup demo node modules
        shell: bash
        run: |
          DEMO_NODE_MODULES=$(jq -r .shakaCustom.demoDeps[] package.json)
          tar cf demo-modules.tar \
              $(echo "$DEMO_NODE_MODULES" | sed -e 's@^@node_modules/@')

      - name: Delete unneeded files
        shell: bash
        run: rm -rf .git .github app-engine build conditional externs test node_modules

      - name: Restore demo node modules
        shell: bash
        run: |
          tar xf demo-modules.tar
          rm demo-modules.tar

      - name: Upload static files as artifact
        id: nightly
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: nightly
        uses: actions/deploy-pages@v4
